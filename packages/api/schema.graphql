scalar DateTime
scalar Void
scalar JSONObject

type Query {
  identity: User
  userOne(id: ID!): User!
  userMany(input: UserManyInput): UserManyOutput!
}

type Mutation {
  identityUpdate(input: IdentityUpdateInput!): User!
  signInCodeComplete(input: SignInCodeCompleteInput!): Void
  signInCodeRequest(input: SignInCodeRequestInput!): Void
  signOut(input: SignOutInput!): Void
  userUpdate(input: UserUpdateInput!): User!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String!
  email: String!
  isPasswordNull: Boolean!
}

type UserManyOutput {
  items: [User!]!
  total: Int!
  hasMore: Boolean!
}

input UserManyInput {
  page: PageInput
  filter: UserManyFilterInput
}

input PageInput {
  page: Int!
  pageSize: Int!
}

input UserManyFilterInput {
  term: String
  teamId: [ID!]
  notTeamId: [ID!]
}

input SignInCodeRequestInput {
  email: String!
}

input SignOutInput {
  email: String!
}

input SignInCodeCompleteInput {
  email: String!
  code: String!
}

input IdentityUpdateInput {
  firstName: String
  lastName: String
}

input UserUpdateInput {
  id: ID!
  firstName: String
  lastName: String
}
